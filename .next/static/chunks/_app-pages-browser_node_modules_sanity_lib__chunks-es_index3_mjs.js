"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_sanity_lib__chunks-es_index3_mjs"],{

/***/ "(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/pairwise.js":
/*!********************************************************************!*\
  !*** ./node_modules/rxjs/dist/esm5/internal/operators/pairwise.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   pairwise: function() { return /* binding */ pairwise; }\n/* harmony export */ });\n/* harmony import */ var _util_lift__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/lift */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/util/lift.js\");\n/* harmony import */ var _OperatorSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./OperatorSubscriber */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js\");\n\n\nfunction pairwise() {\n    return (0,_util_lift__WEBPACK_IMPORTED_MODULE_0__.operate)(function(source, subscriber) {\n        var prev;\n        var hasPrev = false;\n        source.subscribe((0,_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_1__.createOperatorSubscriber)(subscriber, function(value) {\n            var p = prev;\n            prev = value;\n            hasPrev && subscriber.next([\n                p,\n                value\n            ]);\n            hasPrev = true;\n        }));\n    });\n} //# sourceMappingURL=pairwise.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yeGpzL2Rpc3QvZXNtNS9pbnRlcm5hbC9vcGVyYXRvcnMvcGFpcndpc2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQ3VDO0FBQ3lCO0FBNkMxRCxTQUFVRTtJQUNkLE9BQU9GLG1EQUFBQSxDQUFRLFNBQUNHLE1BQU0sRUFBRUMsVUFBVTtRQUNoQyxJQUFJQztRQUNKLElBQUlDLFVBQVU7UUFDZEgsT0FBT0ksU0FBUyxDQUNkTiw2RUFBQUEsQ0FBeUJHLFlBQVksU0FBQ0ksS0FBSztZQUN6QyxJQUFNQyxJQUFJSjtZQUNWQSxPQUFPRztZQUNQRixXQUFXRixXQUFXTSxJQUFJLENBQUM7Z0JBQUNEO2dCQUFHRDthQUFNO1lBQ3JDRixVQUFVO1FBQ1o7SUFFSjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi8uLi9zcmMvaW50ZXJuYWwvb3BlcmF0b3JzL3BhaXJ3aXNlLnRzPzJkNzEiXSwibmFtZXMiOlsib3BlcmF0ZSIsImNyZWF0ZU9wZXJhdG9yU3Vic2NyaWJlciIsInBhaXJ3aXNlIiwic291cmNlIiwic3Vic2NyaWJlciIsInByZXYiLCJoYXNQcmV2Iiwic3Vic2NyaWJlIiwidmFsdWUiLCJwIiwibmV4dCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/pairwise.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sanity/lib/_chunks-es/index3.mjs":
/*!*******************************************************!*\
  !*** ./node_modules/sanity/lib/_chunks-es/index3.mjs ***!
  \*******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ StructureToolBoundary; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var sanity__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! sanity */ \"(app-pages-browser)/./node_modules/sanity/lib/index.mjs\");\n/* harmony import */ var _generate_help_url_esm_mjs__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./generate-help-url.esm.mjs */ \"(app-pages-browser)/./node_modules/sanity/lib/_chunks-es/generate-help-url.esm.mjs\");\n/* harmony import */ var _pane_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./pane.mjs */ \"(app-pages-browser)/./node_modules/sanity/lib/_chunks-es/pane.mjs\");\n/* harmony import */ var sanity_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! sanity/router */ \"(app-pages-browser)/./node_modules/sanity/lib/router.mjs\");\n/* harmony import */ var lodash_omit_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash/omit.js */ \"(app-pages-browser)/./node_modules/lodash/omit.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! rxjs */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/util/isObservable.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! rxjs */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/observable/from.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! rxjs */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/observable/of.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! rxjs */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/firstValueFrom.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! rxjs */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/observable/concat.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! rxjs */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/observable/never.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! rxjs */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/ReplaySubject.js\");\n/* harmony import */ var nanoid__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! nanoid */ \"(app-pages-browser)/./node_modules/nanoid/index.browser.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! rxjs/operators */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/publishReplay.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! rxjs/operators */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/refCount.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! rxjs/operators */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/switchMap.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! rxjs/operators */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/map.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! rxjs/operators */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/startWith.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! rxjs/operators */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/pairwise.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! rxjs/operators */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/scan.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! rxjs/operators */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/distinctUntilChanged.js\");\n/* harmony import */ var _sanity_uuid__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! @sanity/uuid */ \"(app-pages-browser)/./node_modules/uuid/dist/esm-browser/v4.js\");\n/* harmony import */ var _sanity_icons__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! @sanity/icons */ \"(app-pages-browser)/./node_modules/sanity/node_modules/@sanity/icons/dist/index.js\");\n/* harmony import */ var _sanity_ui__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! @sanity/ui */ \"(app-pages-browser)/./node_modules/@sanity/ui/dist/index.mjs\");\n/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! styled-components */ \"(app-pages-browser)/./node_modules/styled-components/dist/styled-components.browser.esm.js\");\n/* harmony import */ var is_hotkey_esm__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! is-hotkey-esm */ \"(app-pages-browser)/./node_modules/is-hotkey-esm/dist/index.js\");\n/* harmony import */ var lodash_isEqual_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash/isEqual.js */ \"(app-pages-browser)/./node_modules/lodash/isEqual.js\");\n/* harmony import */ var _sanity_util_paths__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sanity/util/paths */ \"(app-pages-browser)/./node_modules/@sanity/util/lib/paths.mjs\");\n/* harmony import */ var sanity_singletons__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! sanity/_singletons */ \"(app-pages-browser)/./node_modules/sanity/lib/_singletons.mjs\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst emptyArray = [];\nfunction PaneRouterProvider(props) {\n  const { children, flatIndex, index, params, payload, siblingIndex } = props, { navigate, navigateIntent, resolvePathFromState } = (0,sanity_router__WEBPACK_IMPORTED_MODULE_4__.useRouter)(), routerState = (0,sanity_router__WEBPACK_IMPORTED_MODULE_4__.useRouterState)(), { panes, expand } = (0,_pane_mjs__WEBPACK_IMPORTED_MODULE_5__.usePaneLayout)(), routerPaneGroups = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => routerState?.panes || emptyArray,\n    [routerState?.panes]\n  ), lastPane = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => panes?.[panes.length - 2], [panes]), groupIndex = index - 1, createNextRouterState = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (modifier) => {\n      const currentGroup = routerPaneGroups[groupIndex] || [], currentItem = currentGroup[siblingIndex], nextGroup = modifier(currentGroup, currentItem), nextPanes = [\n        ...routerPaneGroups.slice(0, groupIndex),\n        nextGroup,\n        ...routerPaneGroups.slice(groupIndex + 1)\n      ];\n      return { ...routerState || {}, panes: nextPanes };\n    },\n    [groupIndex, routerPaneGroups, routerState, siblingIndex]\n  ), modifyCurrentGroup = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (modifier) => {\n      const nextRouterState = createNextRouterState(modifier);\n      return setTimeout(() => navigate(nextRouterState), 0), nextRouterState;\n    },\n    [createNextRouterState, navigate]\n  ), createPathWithParams = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (nextParams) => {\n      const nextRouterState = createNextRouterState((siblings, item) => [\n        ...siblings.slice(0, siblingIndex),\n        { ...item, params: nextParams },\n        ...siblings.slice(siblingIndex + 1)\n      ]);\n      return resolvePathFromState(nextRouterState);\n    },\n    [createNextRouterState, resolvePathFromState, siblingIndex]\n  ), setPayload = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (nextPayload) => {\n      modifyCurrentGroup((siblings, item) => [\n        ...siblings.slice(0, siblingIndex),\n        { ...item, payload: nextPayload },\n        ...siblings.slice(siblingIndex + 1)\n      ]);\n    },\n    [modifyCurrentGroup, siblingIndex]\n  ), setParams = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (nextParams) => {\n      modifyCurrentGroup((siblings, item) => [\n        ...siblings.slice(0, siblingIndex),\n        { ...item, params: nextParams },\n        ...siblings.slice(siblingIndex + 1)\n      ]);\n    },\n    [modifyCurrentGroup, siblingIndex]\n  ), handleEditReference = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    ({ id, parentRefPath, type, template }) => {\n      navigate({\n        panes: [\n          ...routerPaneGroups.slice(0, groupIndex + 1),\n          [\n            {\n              id,\n              params: { template: template.id, parentRefPath: (0,_sanity_util_paths__WEBPACK_IMPORTED_MODULE_6__.toString)(parentRefPath), type },\n              payload: template.params\n            }\n          ]\n        ]\n      });\n    },\n    [groupIndex, navigate, routerPaneGroups]\n  ), ctx = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => ({\n      // Zero-based index (position) of pane, visually\n      index: flatIndex,\n      // Zero-based index of pane group (within URL structure)\n      groupIndex,\n      // Zero-based index of pane within sibling group\n      siblingIndex,\n      // Payload of the current pane\n      payload,\n      // Params of the current pane\n      params,\n      // Whether or not the pane has any siblings (within the same group)\n      hasGroupSiblings: routerPaneGroups[groupIndex] ? routerPaneGroups[groupIndex].length > 1 : !1,\n      // The length of the current group\n      groupLength: routerPaneGroups[groupIndex] ? routerPaneGroups[groupIndex].length : 0,\n      // Current router state for the \"panes\" property\n      routerPanesState: routerPaneGroups,\n      // Curried StateLink that passes the correct state automatically\n      ChildLink: _pane_mjs__WEBPACK_IMPORTED_MODULE_5__.ChildLink,\n      // Curried StateLink that pops off the last pane group\n      // Only pass if this is not the first pane\n      BackLink: flatIndex ? _pane_mjs__WEBPACK_IMPORTED_MODULE_5__.BackLink : void 0,\n      // A specialized `ChildLink` that takes in the needed props to open a\n      // referenced document to the right\n      ReferenceChildLink: _pane_mjs__WEBPACK_IMPORTED_MODULE_5__.ReferenceChildLink,\n      // Similar to `ReferenceChildLink` expect without the wrapping component\n      handleEditReference,\n      // Curried StateLink that passed the correct state, but merges params/payload\n      ParameterizedLink: _pane_mjs__WEBPACK_IMPORTED_MODULE_5__.ParameterizedLink,\n      // Replaces the current pane with a new one\n      replaceCurrent: (opts = {}) => {\n        modifyCurrentGroup(() => [\n          { id: opts.id || \"\", payload: opts.payload, params: opts.params || {} }\n        ]);\n      },\n      // Removes the current pane from the group\n      closeCurrent: () => {\n        modifyCurrentGroup(\n          (siblings, item) => siblings.length > 1 ? siblings.filter((sibling) => sibling !== item) : siblings\n        );\n      },\n      // Removes all panes to the right including current\n      closeCurrentAndAfter: (expandLast = !0) => {\n        expandLast && lastPane && expand(lastPane.element), navigate({\n          panes: [...routerPaneGroups.slice(0, groupIndex)]\n        });\n      },\n      // Duplicate the current pane, with optional overrides for payload, parameters\n      duplicateCurrent: (options) => {\n        modifyCurrentGroup((siblings, item) => {\n          const duplicatedItem = {\n            ...item,\n            payload: options?.payload || item.payload,\n            params: options?.params || item.params\n          };\n          return [\n            ...siblings.slice(0, siblingIndex),\n            duplicatedItem,\n            ...siblings.slice(siblingIndex)\n          ];\n        });\n      },\n      // Set the view for the current pane\n      setView: (viewId) => {\n        const restParams = lodash_omit_js__WEBPACK_IMPORTED_MODULE_2__(params, \"view\");\n        return setParams(viewId ? { ...restParams, view: viewId } : restParams);\n      },\n      // Set the parameters for the current pane\n      setParams,\n      // Set the payload for the current pane\n      setPayload,\n      // A function that returns a path with the given parameters\n      createPathWithParams,\n      // Proxied navigation to a given intent. Consider just exposing `router` instead?\n      navigateIntent\n    }),\n    [\n      flatIndex,\n      groupIndex,\n      siblingIndex,\n      payload,\n      params,\n      routerPaneGroups,\n      handleEditReference,\n      setParams,\n      setPayload,\n      createPathWithParams,\n      navigateIntent,\n      modifyCurrentGroup,\n      lastPane,\n      navigate,\n      expand\n    ]\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(sanity_singletons__WEBPACK_IMPORTED_MODULE_7__.PaneRouterContext.Provider, { value: ctx, children });\n}\nclass PaneResolutionError extends Error {\n  cause;\n  context;\n  helpId;\n  constructor({ message, context, helpId, cause }) {\n    super(message), this.name = \"PaneResolutionError\", this.context = context, this.helpId = helpId, this.cause = cause;\n  }\n}\nconst randomIdCache = /* @__PURE__ */ new WeakMap();\nfunction assignId(obj) {\n  const cachedValue = randomIdCache.get(obj);\n  if (cachedValue) return cachedValue;\n  const id = (0,nanoid__WEBPACK_IMPORTED_MODULE_8__.nanoid)();\n  return randomIdCache.set(obj, id), id;\n}\nconst isPromise = (thing) => !!thing && typeof thing?.then == \"function\", isSerializable = (thing) => (0,sanity__WEBPACK_IMPORTED_MODULE_9__.isRecord)(thing) ? typeof thing.serialize == \"function\" : !1, rethrowWithPaneResolutionErrors = (next) => (unresolvedPane, context, flatIndex) => {\n  try {\n    return next(unresolvedPane, context, flatIndex);\n  } catch (e) {\n    throw e instanceof PaneResolutionError ? e : new PaneResolutionError({\n      message: typeof e?.message == \"string\" ? e.message : \"\",\n      context,\n      cause: e\n    });\n  }\n}, wrapWithPublishReplay = (next) => (...args) => next(...args).pipe(\n  // need to add publishReplay + refCount to ensure new subscribers always\n  // get an emission. without this, memoized observables may get stuck\n  // waiting for their first emissions resulting in a loading pane\n  (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_10__.publishReplay)(1),\n  (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_11__.refCount)()\n);\nfunction createPaneResolver(middleware) {\n  const resolvePane = rethrowWithPaneResolutionErrors(\n    wrapWithPublishReplay(\n      middleware((unresolvedPane, context, flatIndex) => {\n        if (!unresolvedPane)\n          throw new PaneResolutionError({\n            message: \"Pane returned no child\",\n            context,\n            helpId: \"structure-item-returned-no-child\"\n          });\n        return isPromise(unresolvedPane) || (0,rxjs__WEBPACK_IMPORTED_MODULE_12__.isObservable)(unresolvedPane) ? (0,rxjs__WEBPACK_IMPORTED_MODULE_13__.from)(unresolvedPane).pipe(\n          (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_14__.switchMap)((result) => resolvePane(result, context, flatIndex))\n        ) : isSerializable(unresolvedPane) ? resolvePane(unresolvedPane.serialize(context), context, flatIndex) : typeof unresolvedPane == \"function\" ? resolvePane(unresolvedPane(context.id, context), context, flatIndex) : (0,rxjs__WEBPACK_IMPORTED_MODULE_15__.of)(unresolvedPane);\n      })\n    )\n  );\n  return resolvePane;\n}\nconst bindCache = /* @__PURE__ */ new WeakMap();\nfunction memoBind(obj, methodKey) {\n  const boundMethods = bindCache.get(obj) || /* @__PURE__ */ new Map();\n  if (boundMethods) {\n    const bound2 = boundMethods.get(methodKey);\n    if (bound2) return bound2;\n  }\n  const method = obj[methodKey];\n  if (typeof method != \"function\")\n    throw new Error(\n      `Expected property \\`${methodKey}\\` to be a function but got ${typeof method} instead.`\n    );\n  const bound = method.bind(obj);\n  return boundMethods.set(methodKey, bound), bindCache.set(obj, boundMethods), bound;\n}\nasync function resolveIntent(options) {\n  const resolvedPaneCache = /* @__PURE__ */ new Map(), resolvePane = createPaneResolver((nextFn) => (unresolvedPane, context, flatIndex) => {\n    const key = unresolvedPane && `${assignId(unresolvedPane)}-${context.path.join(\"__\")}`, cachedResolvedPane = key && resolvedPaneCache.get(key);\n    if (cachedResolvedPane) return cachedResolvedPane;\n    const result = nextFn(unresolvedPane, context, flatIndex);\n    return key && resolvedPaneCache.set(key, result), result;\n  }), fallbackEditorPanes = [\n    [\n      {\n        id: `__edit__${options.params.id}`,\n        params: { ...lodash_omit_js__WEBPACK_IMPORTED_MODULE_2__(options.params, [\"id\"]), type: options.params.type },\n        payload: options.payload\n      }\n    ]\n  ];\n  async function traverse({\n    currentId,\n    flatIndex,\n    intent,\n    params,\n    parent: parent2,\n    path,\n    payload,\n    unresolvedPane,\n    levelIndex,\n    structureContext\n  }) {\n    if (!unresolvedPane) return [];\n    const { id: targetId, type: schemaTypeName, ...otherParams } = params, resolvedPane = await (0,rxjs__WEBPACK_IMPORTED_MODULE_16__.firstValueFrom)(resolvePane(unresolvedPane, {\n      id: currentId,\n      splitIndex: 0,\n      parent: parent2,\n      path,\n      index: flatIndex,\n      params: {},\n      payload: void 0,\n      structureContext\n    }, flatIndex));\n    return resolvedPane.type === \"document\" && resolvedPane.id === targetId ? [\n      {\n        panes: [\n          ...path.slice(0, path.length - 1).map((i) => [{ id: i }]),\n          [{ id: targetId, params: otherParams, payload }]\n        ],\n        depthIndex: path.length,\n        levelIndex\n      }\n    ] : (\n      // if the resolve pane's `canHandleIntent` returns true, then resolve\n      resolvedPane.canHandleIntent?.(intent, params, {\n        pane: resolvedPane,\n        index: flatIndex\n      }) || // if the pane's `canHandleIntent` did not return true, then match against\n      // this default case. we will resolve the intent if:\n      resolvedPane.type === \"documentList\" && // 1. the schema type matches (this required for the document to render)\n      resolvedPane.schemaTypeName === schemaTypeName && // 2. the filter is the default filter.\n      //\n      // NOTE: this case is to prevent false positive matches where the user\n      // has configured a more specific filter for a particular type. In that\n      // case, the user can implement their own `canHandleIntent` function\n      resolvedPane.options.filter === \"_type == $type\" ? [\n        {\n          panes: [\n            // map the current path to router panes\n            ...path.map((id) => [{ id }]),\n            // then augment with the intents IDs and params\n            [{ id: params.id, params: otherParams, payload }]\n          ],\n          depthIndex: path.length,\n          levelIndex\n        }\n      ] : resolvedPane.type === \"list\" && resolvedPane.child && resolvedPane.items ? (await Promise.all(\n        resolvedPane.items.map((item, nextLevelIndex) => item.type === \"divider\" ? Promise.resolve([]) : traverse({\n          currentId: item._id || item.id,\n          flatIndex: flatIndex + 1,\n          intent,\n          params,\n          parent: resolvedPane,\n          path: [...path, item.id],\n          payload,\n          unresolvedPane: typeof resolvedPane.child == \"function\" ? memoBind(resolvedPane, \"child\") : resolvedPane.child,\n          levelIndex: nextLevelIndex,\n          structureContext\n        }))\n      )).flat() : []\n    );\n  }\n  const closestPaneToRoot = (await traverse({\n    currentId: \"root\",\n    flatIndex: 0,\n    levelIndex: 0,\n    intent: options.intent,\n    params: options.params,\n    parent: null,\n    path: [],\n    payload: options.payload,\n    unresolvedPane: options.rootPaneNode,\n    structureContext: options.structureContext\n  })).sort((a, b) => a.depthIndex === b.depthIndex ? a.levelIndex - b.levelIndex : a.depthIndex - b.depthIndex)[0];\n  return closestPaneToRoot ? closestPaneToRoot.panes : fallbackEditorPanes;\n}\nconst fallbackEditorChild = (nodeId, context) => {\n  const id = nodeId.replace(/^__edit__/, \"\"), {\n    params,\n    payload,\n    structureContext: { resolveDocumentNode }\n  } = context, { type, template } = params;\n  if (!type)\n    throw new Error(\n      `Document type for document with ID ${id} was not provided in the router params.`\n    );\n  let defaultDocumentBuilder = resolveDocumentNode({ schemaType: type, documentId: id }).id(\"editor\");\n  return template && (defaultDocumentBuilder = defaultDocumentBuilder.initialValueTemplate(\n    template,\n    payload\n  )), defaultDocumentBuilder.serialize();\n};\nfunction hashContext(context) {\n  return `contextHash(${JSON.stringify({\n    id: context.id,\n    parentId: parent && assignId(parent),\n    path: context.path,\n    index: context.index,\n    splitIndex: context.splitIndex,\n    serializeOptionsIndex: context.serializeOptions?.index,\n    serializeOptionsPath: context.serializeOptions?.path\n  })})`;\n}\nconst hashResolvedPaneMeta = (meta) => {\n  const normalized = {\n    type: meta.type,\n    id: meta.routerPaneSibling.id,\n    params: meta.routerPaneSibling.params || {},\n    payload: meta.routerPaneSibling.payload || null,\n    flatIndex: meta.flatIndex,\n    groupIndex: meta.groupIndex,\n    siblingIndex: meta.siblingIndex,\n    path: meta.path,\n    paneNode: meta.type === \"resolvedMeta\" ? assignId(meta.paneNode) : null\n  };\n  return `metaHash(${JSON.stringify(normalized)})`;\n};\nfunction resolvePaneTree({\n  unresolvedPane,\n  flattenedRouterPanes,\n  parent: parent2,\n  path,\n  resolvePane,\n  structureContext\n}) {\n  const [current, ...rest] = flattenedRouterPanes, next = rest[0], context = {\n    id: current.routerPaneSibling.id,\n    splitIndex: current.siblingIndex,\n    parent: parent2,\n    path: [...path, current.routerPaneSibling.id],\n    index: current.flatIndex,\n    params: current.routerPaneSibling.params || {},\n    payload: current.routerPaneSibling.payload,\n    structureContext\n  };\n  try {\n    return resolvePane(unresolvedPane, context, current.flatIndex).pipe(\n      // this switch map receives a resolved pane\n      (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_14__.switchMap)((paneNode) => {\n        const resolvedPaneMeta = {\n          type: \"resolvedMeta\",\n          ...current,\n          paneNode,\n          path: context.path\n        }, loadingPanes = rest.map((i, restIndex) => ({\n          type: \"loading\",\n          path: [\n            ...context.path,\n            ...rest.slice(restIndex).map((_, currentIndex) => `[${i.flatIndex + currentIndex}]`)\n          ],\n          paneNode: null,\n          ...i\n        }));\n        if (!rest.length)\n          return (0,rxjs__WEBPACK_IMPORTED_MODULE_15__.of)([resolvedPaneMeta]);\n        let nextStream;\n        return (\n          /* the fallback editor case */\n          next?.routerPaneSibling.id.startsWith(\"__edit__\") ? nextStream = resolvePaneTree({\n            unresolvedPane: fallbackEditorChild,\n            flattenedRouterPanes: rest,\n            parent: parent2,\n            path: context.path,\n            resolvePane,\n            structureContext\n          }) : current.groupIndex === next?.groupIndex ? nextStream = resolvePaneTree({\n            unresolvedPane,\n            flattenedRouterPanes: rest,\n            parent: parent2,\n            path,\n            resolvePane,\n            structureContext\n          }) : nextStream = resolvePaneTree({\n            unresolvedPane: typeof paneNode.child == \"function\" ? memoBind(paneNode, \"child\") : paneNode.child,\n            flattenedRouterPanes: rest,\n            parent: paneNode,\n            path: context.path,\n            resolvePane,\n            structureContext\n          }), (0,rxjs__WEBPACK_IMPORTED_MODULE_17__.concat)(\n            // we emit the loading panes first in a concat (this emits immediately)\n            (0,rxjs__WEBPACK_IMPORTED_MODULE_15__.of)([resolvedPaneMeta, ...loadingPanes]),\n            // then whenever the next stream is done, the results will be combined.\n            nextStream.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_18__.map)((nextResolvedPanes) => [resolvedPaneMeta, ...nextResolvedPanes]))\n          )\n        );\n      })\n    );\n  } catch (e) {\n    if (e instanceof PaneResolutionError && (e.context && console.warn(\n      `Pane resolution error at index ${e.context.index}${e.context.splitIndex > 0 ? ` for split pane index ${e.context.splitIndex}` : \"\"}: ${e.message}${e.helpId ? ` - see ${(0,_generate_help_url_esm_mjs__WEBPACK_IMPORTED_MODULE_19__.generateHelpUrl)(e.helpId)}` : \"\"}`,\n      e\n    ), e.helpId === \"structure-item-returned-no-child\"))\n      return (0,rxjs__WEBPACK_IMPORTED_MODULE_15__.of)([]);\n    throw e;\n  }\n}\nfunction createResolvedPaneNodeStream({\n  routerPanesStream,\n  rootPaneNode,\n  initialCacheState = {\n    cacheKeysByFlatIndex: [],\n    flattenedRouterPanes: [],\n    resolvedPaneCache: /* @__PURE__ */ new Map(),\n    resolvePane: () => rxjs__WEBPACK_IMPORTED_MODULE_20__.NEVER\n  },\n  structureContext\n}) {\n  return routerPanesStream.pipe(\n    // add in implicit \"root\" router pane\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_18__.map)((rawRouterPanes) => [[{ id: \"root\" }], ...rawRouterPanes]),\n    // create flattened router panes\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_18__.map)((routerPanes) => routerPanes.flatMap(\n      (routerPaneGroup, groupIndex) => routerPaneGroup.map((routerPaneSibling, siblingIndex) => ({\n        routerPaneSibling,\n        groupIndex,\n        siblingIndex\n      }))\n    ).map((i, index) => ({ ...i, flatIndex: index }))),\n    // calculate a \"diffIndex\" used for clearing the memo cache\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_21__.startWith)([]),\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_22__.pairwise)(),\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_18__.map)(([prev, curr]) => {\n      for (let i = 0; i < curr.length; i++) {\n        const prevValue = prev[i], currValue = curr[i];\n        if (!lodash_isEqual_js__WEBPACK_IMPORTED_MODULE_3__(prevValue, currValue))\n          return {\n            flattenedRouterPanes: curr,\n            diffIndex: i\n          };\n      }\n      return {\n        flattenedRouterPanes: curr,\n        diffIndex: curr.length\n      };\n    }),\n    // create the memoized `resolvePane` function and manage the memo cache\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_23__.scan)((acc, next) => {\n      const { cacheKeysByFlatIndex, resolvedPaneCache } = acc, { flattenedRouterPanes, diffIndex } = next, beforeDiffIndex = cacheKeysByFlatIndex.slice(0, diffIndex + 1), afterDiffIndex = cacheKeysByFlatIndex.slice(diffIndex + 1), keysToKeep = new Set(beforeDiffIndex.flatMap((keySet) => Array.from(keySet))), keysToDelete = afterDiffIndex.flatMap((keySet) => Array.from(keySet)).filter((key) => !keysToKeep.has(key));\n      for (const key of keysToDelete)\n        resolvedPaneCache.delete(key);\n      return {\n        flattenedRouterPanes,\n        cacheKeysByFlatIndex,\n        resolvedPaneCache,\n        resolvePane: createPaneResolver((nextFn) => (unresolvedPane, context, flatIndex) => {\n          const key = unresolvedPane && `${assignId(unresolvedPane)}-${hashContext(context)}`, cachedResolvedPane = key && resolvedPaneCache.get(key);\n          if (cachedResolvedPane) return cachedResolvedPane;\n          const result = nextFn(unresolvedPane, context, flatIndex);\n          if (!key) return result;\n          const cacheKeySet = cacheKeysByFlatIndex[flatIndex] || /* @__PURE__ */ new Set();\n          return cacheKeySet.add(key), cacheKeysByFlatIndex[flatIndex] = cacheKeySet, resolvedPaneCache.set(key, result), result;\n        })\n      };\n    }, initialCacheState),\n    // run the memoized, recursive resolving\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_14__.switchMap)(\n      ({ flattenedRouterPanes, resolvePane }) => resolvePaneTree({\n        unresolvedPane: rootPaneNode,\n        flattenedRouterPanes,\n        parent: null,\n        path: [],\n        resolvePane,\n        structureContext\n      })\n    )\n  ).pipe(\n    // this diffs the previous emission with the current one. if there is a new\n    // loading pane at the same position where a previous pane already had a\n    // resolved value (looking at the IDs to compare), then return the previous\n    // pane instead of the loading pane\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_23__.scan)(\n      (prev, next) => next.map((nextPane, index) => {\n        const prevPane = prev[index];\n        return !prevPane || nextPane.type !== \"loading\" ? nextPane : prevPane.routerPaneSibling.id === nextPane.routerPaneSibling.id ? prevPane : nextPane;\n      }),\n      []\n    ),\n    // this prevents duplicate emissions\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_24__.distinctUntilChanged)((prev, next) => {\n      if (prev.length !== next.length) return !1;\n      for (let i = 0; i < next.length; i++) {\n        const prevValue = prev[i], nextValue = next[i];\n        if (hashResolvedPaneMeta(prevValue) !== hashResolvedPaneMeta(nextValue))\n          return !1;\n      }\n      return !0;\n    })\n  );\n}\nfunction useRouterPanesStream() {\n  const routerStateSubject = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => new rxjs__WEBPACK_IMPORTED_MODULE_25__.ReplaySubject(1), []), routerPanes$ = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => routerStateSubject.asObservable().pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_18__.map)((_routerState) => _routerState?.panes || [])),\n    [routerStateSubject]\n  ), { state: routerState } = (0,sanity_router__WEBPACK_IMPORTED_MODULE_4__.useRouter)();\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    routerStateSubject.next(routerState);\n  }, [routerState, routerStateSubject]), routerPanes$;\n}\nfunction useResolvedPanes() {\n  const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)();\n  if (error) throw error;\n  const { structureContext, rootPaneNode } = (0,_pane_mjs__WEBPACK_IMPORTED_MODULE_5__.useStructureTool)(), [data, setData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n    paneDataItems: [],\n    resolvedPanes: [],\n    routerPanes: []\n  }), routerPanesStream = useRouterPanesStream();\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    const subscription = createResolvedPaneNodeStream({\n      rootPaneNode,\n      routerPanesStream,\n      structureContext\n    }).pipe(\n      (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_18__.map)((resolvedPanes) => {\n        const routerPanes = resolvedPanes.reduce((acc, next) => {\n          const currentGroup = acc[next.groupIndex] || [];\n          return currentGroup[next.siblingIndex] = next.routerPaneSibling, acc[next.groupIndex] = currentGroup, acc;\n        }, []), groupsLen = routerPanes.length, paneDataItems = resolvedPanes.map((pane) => {\n          const { groupIndex, flatIndex, siblingIndex, routerPaneSibling, path } = pane, itemId = routerPaneSibling.id, nextGroup = routerPanes[groupIndex + 1];\n          return {\n            active: groupIndex === groupsLen - 2,\n            childItemId: nextGroup?.[0].id ?? null,\n            index: flatIndex,\n            itemId: routerPaneSibling.id,\n            groupIndex,\n            key: `${pane.type === \"loading\" ? \"unknown\" : pane.paneNode.id}-${itemId}-${siblingIndex}`,\n            pane: pane.type === \"loading\" ? _pane_mjs__WEBPACK_IMPORTED_MODULE_5__.LOADING_PANE : pane.paneNode,\n            params: routerPaneSibling.params || {},\n            path: path.join(\";\"),\n            payload: routerPaneSibling.payload,\n            selected: flatIndex === resolvedPanes.length - 1,\n            siblingIndex\n          };\n        });\n        return {\n          paneDataItems,\n          routerPanes,\n          resolvedPanes: paneDataItems.map((pane) => pane.pane)\n        };\n      })\n    ).subscribe({\n      next: (result) => setData(result),\n      error: (e) => setError(e)\n    });\n    return () => subscription.unsubscribe();\n  }, [rootPaneNode, routerPanesStream, structureContext]), data;\n}\nasync function ensureDocumentIdAndType(documentStore, id, type) {\n  if (id && type) return { id, type };\n  if (!id && type) return { id: (0,_sanity_uuid__WEBPACK_IMPORTED_MODULE_26__[\"default\"])(), type };\n  if (id && !type) {\n    const resolvedType = await (0,rxjs__WEBPACK_IMPORTED_MODULE_16__.firstValueFrom)(\n      documentStore.resolveTypeForDocument(id)\n    );\n    return { id, type: resolvedType };\n  }\n  throw new PaneResolutionError({\n    message: \"Neither document `id` or `type` was provided when trying to resolve intent.\"\n  });\n}\nconst EMPTY_RECORD = {}, IntentResolver = (0,react__WEBPACK_IMPORTED_MODULE_1__.memo)(function() {\n  const { navigate } = (0,sanity_router__WEBPACK_IMPORTED_MODULE_4__.useRouter)(), maybeIntent = (0,sanity_router__WEBPACK_IMPORTED_MODULE_4__.useRouterState)(\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((routerState) => {\n      const intentName = typeof routerState.intent == \"string\" ? routerState.intent : void 0;\n      return intentName ? {\n        intent: intentName,\n        params: (0,sanity__WEBPACK_IMPORTED_MODULE_9__.isRecord)(routerState.params) ? routerState.params : EMPTY_RECORD,\n        payload: routerState.payload\n      } : void 0;\n    }, [])\n  ), { rootPaneNode, structureContext } = (0,_pane_mjs__WEBPACK_IMPORTED_MODULE_5__.useStructureTool)(), documentStore = (0,sanity__WEBPACK_IMPORTED_MODULE_9__.useDocumentStore)(), [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n  if (error) throw error;\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (maybeIntent) {\n      const { intent, params, payload } = maybeIntent;\n      let cancelled = !1;\n      async function effect() {\n        const { id, type } = await ensureDocumentIdAndType(\n          documentStore,\n          typeof params.id == \"string\" ? params.id : void 0,\n          typeof params.type == \"string\" ? params.type : void 0\n        );\n        if (cancelled) return;\n        const panes = await resolveIntent({\n          intent,\n          params: { ...params, id, type },\n          payload,\n          rootPaneNode,\n          structureContext\n        });\n        cancelled || navigate({ panes }, { replace: !0 });\n      }\n      return effect().catch(setError), () => {\n        cancelled = !0;\n      };\n    }\n  }, [documentStore, maybeIntent, navigate, rootPaneNode, structureContext]), null;\n}), PathSegment = styled_components__WEBPACK_IMPORTED_MODULE_27__.styled.span`\n  &:not(:last-child)::after {\n    content: ' ➝ ';\n    opacity: 0.5;\n  }\n`;\nfunction formatStack(stack) {\n  return stack.replace(/\\(\\.\\.\\.\\)\\./g, `(...)\n  .`).replace(/__WEBPACK_IMPORTED_MODULE_\\d+_+/g, \"\").replace(/___default\\./g, \".\").replace(new RegExp(` \\\\(https?:\\\\/\\\\/${window.location.host}`, \"g\"), \" (\");\n}\nfunction StructureError({ error }) {\n  if (!(error instanceof PaneResolutionError))\n    throw error;\n  const { cause } = error, { t } = (0,sanity__WEBPACK_IMPORTED_MODULE_9__.useTranslation)(_pane_mjs__WEBPACK_IMPORTED_MODULE_5__.structureLocaleNamespace), stack = cause?.stack || error.stack, showStack = stack && !(cause instanceof _pane_mjs__WEBPACK_IMPORTED_MODULE_5__.SerializeError) && !error.message.includes(\"Module build failed:\"), path = cause instanceof _pane_mjs__WEBPACK_IMPORTED_MODULE_5__.SerializeError ? cause.path : [], helpId = cause instanceof _pane_mjs__WEBPACK_IMPORTED_MODULE_5__.SerializeError && cause.helpId || error.helpId, handleReload = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => {\n    window.location.reload();\n  }, []);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_28__.Card, { height: \"fill\", overflow: \"auto\", padding: 4, sizing: \"border\", tone: \"critical\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui__WEBPACK_IMPORTED_MODULE_28__.Container, { children: [\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_28__.Heading, { as: \"h2\", children: t(\"structure-error.header.text\") }),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui__WEBPACK_IMPORTED_MODULE_28__.Card, { marginTop: 4, padding: 4, radius: 2, overflow: \"auto\", shadow: 1, tone: \"inherit\", children: [\n      path.length > 0 && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui__WEBPACK_IMPORTED_MODULE_28__.Stack, { space: 2, children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_28__.Text, { size: 1, weight: \"medium\", children: t(\"structure-error.structure-path.label\") }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_28__.Code, { children: path.slice(1).map((segment, i) => (\n          // eslint-disable-next-line react/no-array-index-key\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(PathSegment, { children: segment }, `${segment}-${i}`)\n        )) })\n      ] }),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui__WEBPACK_IMPORTED_MODULE_28__.Stack, { marginTop: 4, space: 2, children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_28__.Text, { size: 1, weight: \"medium\", children: t(\"structure-error.error.label\") }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_28__.Code, { children: showStack ? formatStack(stack) : error.message })\n      ] }),\n      helpId && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_28__.Box, { marginTop: 4, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_28__.Text, { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"a\", { href: (0,_generate_help_url_esm_mjs__WEBPACK_IMPORTED_MODULE_19__.generateHelpUrl)(helpId), rel: \"noopener noreferrer\", target: \"_blank\", children: t(\"structure-error.docs-link.text\") }) }) }),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_28__.Box, { marginTop: 4, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        _generate_help_url_esm_mjs__WEBPACK_IMPORTED_MODULE_19__.Button,\n        {\n          text: t(\"structure-error.reload-button.text\"),\n          icon: _sanity_icons__WEBPACK_IMPORTED_MODULE_29__.SyncIcon,\n          tone: \"primary\",\n          onClick: handleReload\n        }\n      ) })\n    ] })\n  ] }) });\n}\nfunction UnknownPane(props) {\n  const { isSelected, pane, paneKey } = props, type = (0,sanity__WEBPACK_IMPORTED_MODULE_9__.isRecord)(pane) && pane.type || null, { t } = (0,sanity__WEBPACK_IMPORTED_MODULE_9__.useTranslation)(_pane_mjs__WEBPACK_IMPORTED_MODULE_5__.structureLocaleNamespace);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_pane_mjs__WEBPACK_IMPORTED_MODULE_5__.Pane, { id: paneKey, selected: isSelected, children: [\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_pane_mjs__WEBPACK_IMPORTED_MODULE_5__.PaneHeader, { title: t(\"panes.unknown-pane-type.title\") }),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_pane_mjs__WEBPACK_IMPORTED_MODULE_5__.PaneContent, { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_28__.Box, { padding: 4, children: typeof type == \"string\" ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_28__.Text, { as: \"p\", muted: !0, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n      sanity__WEBPACK_IMPORTED_MODULE_9__.Translate,\n      {\n        t,\n        i18nKey: \"panes.unknown-pane-type.unknown-type.text\",\n        values: { type }\n      }\n    ) }) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_28__.Text, { as: \"p\", muted: !0, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(sanity__WEBPACK_IMPORTED_MODULE_9__.Translate, { t, i18nKey: \"panes.unknown-pane-type.missing-type.text\" }) }) }) })\n  ] });\n}\nconst paneMap = {\n  component: (0,react__WEBPACK_IMPORTED_MODULE_1__.lazy)(() => __webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_sanity_lib__chunks-es_index_mjs\").then(__webpack_require__.bind(__webpack_require__, /*! ./index.mjs */ \"(app-pages-browser)/./node_modules/sanity/lib/_chunks-es/index.mjs\"))),\n  document: (0,react__WEBPACK_IMPORTED_MODULE_1__.lazy)(() => Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./pane.mjs */ \"(app-pages-browser)/./node_modules/sanity/lib/_chunks-es/pane.mjs\")).then(function(n) {\n    return n.pane;\n  })),\n  documentList: (0,react__WEBPACK_IMPORTED_MODULE_1__.lazy)(() => Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./pane.mjs */ \"(app-pages-browser)/./node_modules/sanity/lib/_chunks-es/pane.mjs\")).then(function(n) {\n    return n.pane$1;\n  })),\n  list: (0,react__WEBPACK_IMPORTED_MODULE_1__.lazy)(() => __webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_sanity_lib__chunks-es_index2_mjs\").then(__webpack_require__.bind(__webpack_require__, /*! ./index2.mjs */ \"(app-pages-browser)/./node_modules/sanity/lib/_chunks-es/index2.mjs\")))\n}, StructureToolPane = (0,react__WEBPACK_IMPORTED_MODULE_1__.memo)(\n  function(props) {\n    const {\n      active,\n      childItemId,\n      groupIndex,\n      index,\n      itemId,\n      pane,\n      paneKey,\n      params,\n      payload,\n      path,\n      selected,\n      siblingIndex\n    } = props, PaneComponent = paneMap[pane.type] || UnknownPane;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n      PaneRouterProvider,\n      {\n        flatIndex: index,\n        index: groupIndex,\n        params,\n        payload,\n        siblingIndex,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react__WEBPACK_IMPORTED_MODULE_1__.Suspense, { fallback: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_pane_mjs__WEBPACK_IMPORTED_MODULE_5__.LoadingPane, { paneKey, path, selected }), children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          PaneComponent,\n          {\n            childItemId: childItemId || \"\",\n            index,\n            itemId,\n            isActive: active,\n            isSelected: selected,\n            paneKey,\n            pane\n          }\n        ) })\n      }\n    );\n  },\n  ({ params: prevParams = {}, payload: prevPayload = null, ...prev }, { params: nextParams = {}, payload: nextPayload = null, ...next }) => {\n    if (!lodash_isEqual_js__WEBPACK_IMPORTED_MODULE_3__(prevParams, nextParams) || !lodash_isEqual_js__WEBPACK_IMPORTED_MODULE_3__(prevPayload, nextPayload)) return !1;\n    const keys = /* @__PURE__ */ new Set([...Object.keys(prev), ...Object.keys(next)]);\n    for (const key of keys)\n      if (prev[key] !== next[key]) return !1;\n    return !0;\n  }\n);\nfunction NoDocumentTypesScreen() {\n  const { t } = (0,sanity__WEBPACK_IMPORTED_MODULE_9__.useTranslation)(_pane_mjs__WEBPACK_IMPORTED_MODULE_5__.structureLocaleNamespace);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_28__.Card, { height: \"fill\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_28__.Flex, { align: \"center\", height: \"fill\", justify: \"center\", padding: 4, sizing: \"border\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_28__.Container, { width: 0, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_28__.Card, { padding: 4, radius: 2, shadow: 1, tone: \"caution\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui__WEBPACK_IMPORTED_MODULE_28__.Flex, { children: [\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_28__.Box, { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_28__.Text, { size: 1, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_icons__WEBPACK_IMPORTED_MODULE_29__.WarningOutlineIcon, {}) }) }),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui__WEBPACK_IMPORTED_MODULE_28__.Stack, { flex: 1, marginLeft: 3, space: 3, children: [\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_28__.Text, { as: \"h1\", size: 1, weight: \"medium\", children: t(\"no-document-types-screen.title\") }),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_28__.Text, { as: \"p\", muted: !0, size: 1, children: t(\"no-document-types-screen.subtitle\") }),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_28__.Text, { as: \"p\", muted: !0, size: 1, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"a\",\n        {\n          href: \"https://www.sanity.io/docs/create-a-schema-and-configure-sanity-studio\",\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          children: t(\"no-document-types-screen.link-text\")\n        }\n      ) })\n    ] })\n  ] }) }) }) }) });\n}\nconst DocumentTitle = (props) => {\n  const { documentId, documentType } = props, editState = (0,sanity__WEBPACK_IMPORTED_MODULE_9__.useEditState)(documentId, documentType), schema = (0,sanity__WEBPACK_IMPORTED_MODULE_9__.useSchema)(), { t } = (0,sanity__WEBPACK_IMPORTED_MODULE_9__.useTranslation)(_pane_mjs__WEBPACK_IMPORTED_MODULE_5__.structureLocaleNamespace), isNewDocument = !editState?.published && !editState?.draft, documentValue = editState?.draft || editState?.published, schemaType = schema.get(documentType), { value, isLoading: previewValueIsLoading } = (0,sanity__WEBPACK_IMPORTED_MODULE_9__.unstable_useValuePreview)({\n    enabled: !0,\n    schemaType,\n    value: documentValue\n  }), documentTitle = isNewDocument ? t(\"browser-document-title.new-document\", {\n    schemaType: schemaType?.title || schemaType?.name\n  }) : value?.title || t(\"browser-document-title.untitled-document\"), settled = editState.ready && !previewValueIsLoading, newTitle = useConstructDocumentTitle(documentTitle);\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    settled && (document.title = newTitle);\n  }, [documentTitle, settled, newTitle]), null;\n}, PassthroughTitle = (props) => {\n  const { title } = props, newTitle = useConstructDocumentTitle(title);\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    document.title = newTitle;\n  }, [newTitle, title]), null;\n}, StructureTitle = (props) => {\n  const { resolvedPanes } = props;\n  if (!resolvedPanes?.length) return null;\n  const lastPane = resolvedPanes[resolvedPanes.length - 1];\n  return isLoadingPane(lastPane) ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(PassthroughTitle, {}) : isDocumentPane(lastPane) ? lastPane?.title ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(PassthroughTitle, { title: lastPane.title }) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(DocumentTitle, { documentId: lastPane.options.id, documentType: lastPane.options.type }) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(PassthroughTitle, { title: lastPane?.title });\n};\nfunction useConstructDocumentTitle(activeTitle) {\n  const structureToolBaseTitle = (0,_pane_mjs__WEBPACK_IMPORTED_MODULE_5__.useStructureTool)().structureContext.title;\n  return [activeTitle, structureToolBaseTitle].filter((title) => title).join(\" | \");\n}\nfunction isDocumentPane(pane) {\n  return pane !== _pane_mjs__WEBPACK_IMPORTED_MODULE_5__.LOADING_PANE && pane.type === \"document\";\n}\nfunction isLoadingPane(pane) {\n  return pane === _pane_mjs__WEBPACK_IMPORTED_MODULE_5__.LOADING_PANE;\n}\nconst StyledPaneLayout = (0,styled_components__WEBPACK_IMPORTED_MODULE_27__.styled)((0,_pane_mjs__WEBPACK_IMPORTED_MODULE_5__.PaneLayout))`\n  min-height: 100%;\n  min-width: 320px;\n`, isSaveHotkey = (0,is_hotkey_esm__WEBPACK_IMPORTED_MODULE_30__.isHotkey)(\"mod+s\"), StructureTool = (0,react__WEBPACK_IMPORTED_MODULE_1__.memo)(function({ onPaneChange }) {\n  const { push: pushToast } = (0,_sanity_ui__WEBPACK_IMPORTED_MODULE_28__.useToast)(), schema = (0,sanity__WEBPACK_IMPORTED_MODULE_9__.useSchema)(), { layoutCollapsed, setLayoutCollapsed } = (0,_pane_mjs__WEBPACK_IMPORTED_MODULE_5__.useStructureTool)(), { paneDataItems, resolvedPanes } = useResolvedPanes(), isResolvingIntent = (0,sanity_router__WEBPACK_IMPORTED_MODULE_4__.useRouterState)(\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((routerState) => typeof routerState.intent == \"string\", [])\n  ), {\n    sanity: { media }\n  } = (0,_sanity_ui__WEBPACK_IMPORTED_MODULE_28__.useTheme)(), [portalElement, setPortalElement] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null), handleRootCollapse = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => setLayoutCollapsed(!0), [setLayoutCollapsed]), handleRootExpand = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => setLayoutCollapsed(!1), [setLayoutCollapsed]);\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    resolvedPanes.length && onPaneChange(resolvedPanes);\n  }, [onPaneChange, resolvedPanes]), (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    const handleGlobalKeyDown = (event) => {\n      isSaveHotkey(event) && (event.preventDefault(), pushToast({\n        closable: !0,\n        id: \"auto-save-message\",\n        status: \"info\",\n        title: \"Your work is automatically saved!\",\n        duration: 4e3\n      }));\n    };\n    return window.addEventListener(\"keydown\", handleGlobalKeyDown), () => window.removeEventListener(\"keydown\", handleGlobalKeyDown);\n  }, [pushToast]), schema._original?.types.some(sanity__WEBPACK_IMPORTED_MODULE_9__._isCustomDocumentTypeDefinition) ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui__WEBPACK_IMPORTED_MODULE_28__.PortalProvider, { element: portalElement || null, children: [\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n      StyledPaneLayout,\n      {\n        flex: 1,\n        height: layoutCollapsed ? void 0 : \"fill\",\n        minWidth: media[1],\n        onCollapse: handleRootCollapse,\n        onExpand: handleRootExpand,\n        children: [\n          paneDataItems.map(\n            ({\n              active,\n              childItemId,\n              groupIndex,\n              itemId,\n              key: paneKey,\n              pane,\n              index: paneIndex,\n              params: paneParams,\n              path,\n              payload,\n              siblingIndex,\n              selected\n            }) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react__WEBPACK_IMPORTED_MODULE_1__.Fragment, { children: pane === _pane_mjs__WEBPACK_IMPORTED_MODULE_5__.LOADING_PANE ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_pane_mjs__WEBPACK_IMPORTED_MODULE_5__.LoadingPane, { paneKey, path, selected }) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n              StructureToolPane,\n              {\n                active,\n                groupIndex,\n                index: paneIndex,\n                pane,\n                childItemId,\n                itemId,\n                paneKey,\n                params: paneParams,\n                payload,\n                path,\n                selected,\n                siblingIndex\n              }\n            ) }, `${pane === _pane_mjs__WEBPACK_IMPORTED_MODULE_5__.LOADING_PANE ? \"loading\" : pane.type}-${paneIndex}`)\n          ),\n          paneDataItems.length <= 1 && isResolvingIntent && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_pane_mjs__WEBPACK_IMPORTED_MODULE_5__.LoadingPane, { paneKey: \"intent-resolver\" })\n        ]\n      }\n    ),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StructureTitle, { resolvedPanes }),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { \"data-portal\": \"\", ref: setPortalElement })\n  ] }) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(NoDocumentTypesScreen, {});\n});\nfunction StructureToolBoundary({ tool: { options } }) {\n  const { unstable_sources: sources } = (0,sanity__WEBPACK_IMPORTED_MODULE_9__.useWorkspace)(), [firstSource] = sources, { source, defaultDocumentNode, structure } = options || {};\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => ((0,_pane_mjs__WEBPACK_IMPORTED_MODULE_5__.setActivePanes)([]), () => (0,_pane_mjs__WEBPACK_IMPORTED_MODULE_5__.setActivePanes)([])), []);\n  const [{ error }, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({ error: null });\n  return error ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StructureError, { error }) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_generate_help_url_esm_mjs__WEBPACK_IMPORTED_MODULE_19__.ErrorBoundary, { onCatch: setError, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(sanity__WEBPACK_IMPORTED_MODULE_9__.SourceProvider, { name: source || firstSource.name, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_pane_mjs__WEBPACK_IMPORTED_MODULE_5__.StructureToolProvider, { defaultDocumentNode, structure, children: [\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StructureTool, { onPaneChange: _pane_mjs__WEBPACK_IMPORTED_MODULE_5__.setActivePanes }),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(IntentResolver, {})\n  ] }) }) });\n}\n\n//# sourceMappingURL=index3.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sanity/lib/_chunks-es/index3.mjs\n"));

/***/ })

}]);